
标题: 马虎的算式


    小明是个急性子，上小学的时候经常把老师写在黑板上的题目抄错了。

    有一次，老师出的题目是：36 x 495 = ?

    他却给抄成了：396 x 45 = ?

    但结果却很戏剧性，他的答案竟然是对的！！

    因为 36 * 495 = 396 * 45 = 17820

    类似这样的巧合情况可能还有很多，比如：27 * 594 = 297 * 54

    假设 a b c d e 代表1~9不同的5个数字（注意是各不相同的数字，且不含0）

    能满足形如： ab * cde = adb * ce 这样的算式一共有多少种呢？


请你利用计算机的优势寻找所有的可能，并回答不同算式的种类数。

满足乘法交换律的算式计为不同的种类，所以答案肯定是个偶数。


答案直接通过浏览器提交。
注意：只提交一个表示最终统计种类数的数字，不要提交解答过程或其它多余的内容。

142

方法1（暴力枚举）：
import java.util.ArrayList;
import java.util.Collections;

public class Main {
	public static int count = 0;
	//判断A和B是否是否1~9中不同的5个数字组成
	public boolean judge(int A, int B) {
		ArrayList<Integer> list = new ArrayList<Integer>();
		while(A > 0) {
			list.add(A % 10);
			A = A / 10;
		}
		while(B > 0) {
			list.add(B % 10);
			B = B / 10;
		}
		Collections.sort(list);
		for(int i = 1;i < list.size();i++) {
			if(list.get(i - 1) == 0 || list.get(i - 1) == list.get(i))
				return false;
		}
		return true;
	}
	
	public void printResult() {
		for(int a = 10;a < 100;a++) {
			for(int b = 100;b < 1000;b++) {
				if(judge(a, b)) {
					int a1 = a % 10;
					int a2 = a / 10;
					int b1 = b % 10;
					int b2 = b / 10 % 10;
					int b3 = b / 100;
					if(a * b == (a2*100 + b2*10 + a1) * (b3*10 + b1)) {
						count++;
					}
				}
			}
		}
	}
	
	public static void main(String[] args) {
		Main test = new Main();
		test.printResult();
		System.out.println(count);
	}
}



方法2（dfs全排列枚举）：
import java.util.ArrayList;

public class Main1 {
	public static int count = 0;
	
	public void check(ArrayList<Integer> list) {
		int a = list.get(0);
		int b = list.get(1);
		int c = list.get(2);
		int d = list.get(3);
		int e = list.get(4);
		int num1 = (a*10 + b) * (c*100 + d*10 + e);
		int num2 = (a*100 + d*10 + b) * (c*10 + e);
		if(num1 == num2)
			count++;
		return;
	}
	//dfs求取1~9中随机五个不同数字的全排列
	public void dfs(ArrayList<Integer> list, int step) {
		if(step == 5) {
			check(list);
			return;
		} else {
			for(int i = 1;i < 10;i++) {
				if(list.contains(i))
					continue;
				list.add(i);
				dfs(list, step + 1);
				list.remove(list.size() - 1);
			}
		}
		return;
	}
	
	public static void main(String[] args) {
		Main1 test = new Main1();
		ArrayList<Integer> list = new ArrayList<Integer>();
		test.dfs(list, 0);
		System.out.println(count);
	}
}


