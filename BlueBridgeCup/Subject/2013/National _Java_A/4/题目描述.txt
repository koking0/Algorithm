
标题：约数倍数选卡片

    闲暇时，福尔摩斯和华生玩一个游戏：
    
    在N张卡片上写有N个整数。两人轮流拿走一张卡片。要求下一个人拿的数字一定是前一个人拿的数字的约数或倍数。例如，某次福尔摩斯拿走的卡片上写着数字“6”，则接下来华生可以拿的数字包括：

    1，2，3, 6，12，18，24 ....

    当轮到某一方拿卡片时，没有满足要求的卡片可选，则该方为输方。

    请你利用计算机的优势计算一下，在已知所有卡片上的数字和可选哪些数字的条件下，怎样选择才能保证必胜！

    当选多个数字都可以必胜时，输出其中最小的数字。如果无论如何都会输，则输出-1。


    输入数据为2行。第一行是若干空格分开的整数（每个整数介于1~100间），表示当前剩余的所有卡片。
    第二行也是若干空格分开的整数，表示可以选的数字。当然，第二行的数字必须完全包含在第一行的数字中。

    程序则输出必胜的招法！！


例如：
用户输入：
2 3 6
3 6
则程序应该输出：
3

再如：
用户输入：
1 2 2 3 3 4 5
3 4 5
则程序应该输出：
4


资源约定：
峰值内存消耗（含虚拟机） < 64M
CPU消耗  < 2000ms


请严格按要求输出，不要画蛇添足地打印类似：“请您输入...” 的多余内容。

所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。
注意：不要使用package语句。不要使用jdk1.6及以上版本的特性。
注意：主类的名字必须是：Main，否则按无效代码处理。
