
标题：Log大侠

    atm参加了速算训练班，经过刻苦修炼，对以2为底的对数算得飞快，人称Log大侠。

    一天，Log大侠的好友 drd 有一些整数序列需要变换，Log大侠正好施展法力...

    变换的规则是： 对其某个子序列的每个整数变为: [log_2 (x) + 1]  其中 [] 表示向下取整，
就是对每个数字求以2为底的对数，然后取下整。
    例如对序列 3 4 2 操作一次后，这个序列会变成 2 3 2。
    
    drd需要知道，每次这样操作后，序列的和是多少。

【输入格式】
第一行两个正整数 n m 。
第二行 n 个数，表示整数序列，都是正数。
接下来 m 行，每行两个数 L R 表示 atm 这次操作的是区间 [L, R]，数列序号从1开始。

【输出格式】
输出 m 行，依次表示 atm 每做完一个操作后，整个序列的和。

例如，输入：
3 3
5 6 4
1 2
2 3
1 3

程序应该输出：
10
8
6


【数据范围】
对于 30% 的数据， n, m <= 10^3
对于 100% 的数据， n, m <= 10^5


资源约定：
峰值内存消耗 < 256M
CPU消耗  < 1000ms


请严格按要求输出，不要画蛇添足地打印类似：“请您输入...” 的多余内容。

所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。

注意: main函数需要返回0
注意: 只使用ANSI C/ANSI C++ 标准，不要调用依赖于编译环境或操作系统的特殊函数。
注意: 所有依赖的函数必须明确地在源文件中 #include <xxx>， 不能通过工程设置而省略常用头文件。

提交时，注意选择所期望的编译器类型。
